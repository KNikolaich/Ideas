//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXWebApplication2Responsive.AviceN3ExamServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicySeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SnilsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicySeries {
            get {
                return this.PolicySeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicySeriesField, value) != true)) {
                    this.PolicySeriesField = value;
                    this.RaisePropertyChanged("PolicySeries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Snils {
            get {
                return this.SnilsField;
            }
            set {
                if ((object.ReferenceEquals(this.SnilsField, value) != true)) {
                    this.SnilsField = value;
                    this.RaisePropertyChanged("Snils");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExaminationQuestioningResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalServiceAvailableSlotsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationPlanResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.BookMedicalServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.CancelMedicalServiceBookingResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.UpdateMedicalServiceBookingResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationQuestionnairesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.ValidateMedicalExaminationResult))]
    public partial class MethodResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.Error[] ErrorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.Error[] ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdHistory {
            get {
                return this.IdHistoryField;
            }
            set {
                if ((this.IdHistoryField.Equals(value) != true)) {
                    this.IdHistoryField = value;
                    this.RaisePropertyChanged("IdHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalExaminationQuestioningResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalExaminationQuestioningResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMedicalServiceAvailableSlotsResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class GetMedicalServiceAvailableSlotsResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.Slot[] ListSlotField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.Slot[] ListSlot {
            get {
                return this.ListSlotField;
            }
            set {
                if ((object.ReferenceEquals(this.ListSlotField, value) != true)) {
                    this.ListSlotField = value;
                    this.RaisePropertyChanged("ListSlot");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMedicalExaminationPlanResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class GetMedicalExaminationPlanResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination MedicalExaminationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination MedicalExamination {
            get {
                return this.MedicalExaminationField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalExaminationField, value) != true)) {
                    this.MedicalExaminationField = value;
                    this.RaisePropertyChanged("MedicalExamination");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookMedicalServiceResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class BookMedicalServiceResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalService MedicalServiceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalService MedicalService {
            get {
                return this.MedicalServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceField, value) != true)) {
                    this.MedicalServiceField = value;
                    this.RaisePropertyChanged("MedicalService");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelMedicalServiceBookingResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class CancelMedicalServiceBookingResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateMedicalServiceBookingResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class UpdateMedicalServiceBookingResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMedicalExaminationQuestionnairesResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class GetMedicalExaminationQuestionnairesResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.Questionnaire[] ListQuestionnaireField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.Questionnaire[] ListQuestionnaire {
            get {
                return this.ListQuestionnaireField;
            }
            set {
                if ((object.ReferenceEquals(this.ListQuestionnaireField, value) != true)) {
                    this.ListQuestionnaireField = value;
                    this.RaisePropertyChanged("ListQuestionnaire");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateMedicalExaminationResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class ValidateMedicalExaminationResult : DXWebApplication2Responsive.AviceN3ExamServiceReference.MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination[] ListMedicalExaminationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPat {
            get {
                return this.IdPatField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPatField, value) != true)) {
                    this.IdPatField = value;
                    this.RaisePropertyChanged("IdPat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination[] ListMedicalExamination {
            get {
                return this.ListMedicalExaminationField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMedicalExaminationField, value) != true)) {
                    this.ListMedicalExaminationField = value;
                    this.RaisePropertyChanged("ListMedicalExamination");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdError {
            get {
                return this.IdErrorField;
            }
            set {
                if ((this.IdErrorField.Equals(value) != true)) {
                    this.IdErrorField = value;
                    this.RaisePropertyChanged("IdError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalExamination", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalExamination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExaminationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExaminationStatusNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdMedicalExaminationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsQuestionnaireFilledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalService[] ListMedicalServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalExaminationTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExaminationStatus {
            get {
                return this.ExaminationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminationStatusField, value) != true)) {
                    this.ExaminationStatusField = value;
                    this.RaisePropertyChanged("ExaminationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExaminationStatusNotes {
            get {
                return this.ExaminationStatusNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminationStatusNotesField, value) != true)) {
                    this.ExaminationStatusNotesField = value;
                    this.RaisePropertyChanged("ExaminationStatusNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdMedicalExamination {
            get {
                return this.IdMedicalExaminationField;
            }
            set {
                if ((this.IdMedicalExaminationField.Equals(value) != true)) {
                    this.IdMedicalExaminationField = value;
                    this.RaisePropertyChanged("IdMedicalExamination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsQuestionnaireFilled {
            get {
                return this.IsQuestionnaireFilledField;
            }
            set {
                if ((this.IsQuestionnaireFilledField.Equals(value) != true)) {
                    this.IsQuestionnaireFilledField = value;
                    this.RaisePropertyChanged("IsQuestionnaireFilled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalService[] ListMedicalService {
            get {
                return this.ListMedicalServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMedicalServiceField, value) != true)) {
                    this.ListMedicalServiceField = value;
                    this.RaisePropertyChanged("ListMedicalService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalExaminationType {
            get {
                return this.MedicalExaminationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalExaminationTypeField, value) != true)) {
                    this.MedicalExaminationTypeField = value;
                    this.RaisePropertyChanged("MedicalExaminationType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Slot", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class Slot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdSlotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdSlot {
            get {
                return this.IdSlotField;
            }
            set {
                if ((this.IdSlotField.Equals(value) != true)) {
                    this.IdSlotField = value;
                    this.RaisePropertyChanged("IdSlot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitEnd {
            get {
                return this.VisitEndField;
            }
            set {
                if ((this.VisitEndField.Equals(value) != true)) {
                    this.VisitEndField = value;
                    this.RaisePropertyChanged("VisitEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitStart {
            get {
                return this.VisitStartField;
            }
            set {
                if ((this.VisitStartField.Equals(value) != true)) {
                    this.VisitStartField = value;
                    this.RaisePropertyChanged("VisitStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalService", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdMedicalServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalServiceAvailableResource MedicalServiceAvailableResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalServiceBooking MedicalServiceBookingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MedicalServiceRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceUnavailableReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdMedicalService {
            get {
                return this.IdMedicalServiceField;
            }
            set {
                if ((this.IdMedicalServiceField.Equals(value) != true)) {
                    this.IdMedicalServiceField = value;
                    this.RaisePropertyChanged("IdMedicalService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalServiceAvailableResource MedicalServiceAvailableResource {
            get {
                return this.MedicalServiceAvailableResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceAvailableResourceField, value) != true)) {
                    this.MedicalServiceAvailableResourceField = value;
                    this.RaisePropertyChanged("MedicalServiceAvailableResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalServiceBooking MedicalServiceBooking {
            get {
                return this.MedicalServiceBookingField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceBookingField, value) != true)) {
                    this.MedicalServiceBookingField = value;
                    this.RaisePropertyChanged("MedicalServiceBooking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceCode {
            get {
                return this.MedicalServiceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceCodeField, value) != true)) {
                    this.MedicalServiceCodeField = value;
                    this.RaisePropertyChanged("MedicalServiceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceComment {
            get {
                return this.MedicalServiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceCommentField, value) != true)) {
                    this.MedicalServiceCommentField = value;
                    this.RaisePropertyChanged("MedicalServiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceConditions {
            get {
                return this.MedicalServiceConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceConditionsField, value) != true)) {
                    this.MedicalServiceConditionsField = value;
                    this.RaisePropertyChanged("MedicalServiceConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceName {
            get {
                return this.MedicalServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceNameField, value) != true)) {
                    this.MedicalServiceNameField = value;
                    this.RaisePropertyChanged("MedicalServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MedicalServiceRequired {
            get {
                return this.MedicalServiceRequiredField;
            }
            set {
                if ((this.MedicalServiceRequiredField.Equals(value) != true)) {
                    this.MedicalServiceRequiredField = value;
                    this.RaisePropertyChanged("MedicalServiceRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceStatus {
            get {
                return this.MedicalServiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceStatusField, value) != true)) {
                    this.MedicalServiceStatusField = value;
                    this.RaisePropertyChanged("MedicalServiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceUnavailableReason {
            get {
                return this.MedicalServiceUnavailableReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceUnavailableReasonField, value) != true)) {
                    this.MedicalServiceUnavailableReasonField = value;
                    this.RaisePropertyChanged("MedicalServiceUnavailableReason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalServiceAvailableResource", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalServiceAvailableResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalResource2[] ListMedicalResourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdLpu {
            get {
                return this.IdLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLpuField, value) != true)) {
                    this.IdLpuField = value;
                    this.RaisePropertyChanged("IdLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalResource2[] ListMedicalResource {
            get {
                return this.ListMedicalResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMedicalResourceField, value) != true)) {
                    this.ListMedicalResourceField = value;
                    this.RaisePropertyChanged("ListMedicalResource");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalServiceBooking", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalServiceBooking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookingMemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookingSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ChangeBookingMemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeBookingSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdMedicalServiceBookingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalResource[] ListMedicalResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MedicalServiceBookingDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceBookingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalServiceBoookingCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookingMember {
            get {
                return this.BookingMemberField;
            }
            set {
                if ((this.BookingMemberField.Equals(value) != true)) {
                    this.BookingMemberField = value;
                    this.RaisePropertyChanged("BookingMember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookingSource {
            get {
                return this.BookingSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingSourceField, value) != true)) {
                    this.BookingSourceField = value;
                    this.RaisePropertyChanged("BookingSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ChangeBookingMember {
            get {
                return this.ChangeBookingMemberField;
            }
            set {
                if ((this.ChangeBookingMemberField.Equals(value) != true)) {
                    this.ChangeBookingMemberField = value;
                    this.RaisePropertyChanged("ChangeBookingMember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeBookingSource {
            get {
                return this.ChangeBookingSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeBookingSourceField, value) != true)) {
                    this.ChangeBookingSourceField = value;
                    this.RaisePropertyChanged("ChangeBookingSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdLpu {
            get {
                return this.IdLpuField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLpuField, value) != true)) {
                    this.IdLpuField = value;
                    this.RaisePropertyChanged("IdLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdMedicalServiceBooking {
            get {
                return this.IdMedicalServiceBookingField;
            }
            set {
                if ((this.IdMedicalServiceBookingField.Equals(value) != true)) {
                    this.IdMedicalServiceBookingField = value;
                    this.RaisePropertyChanged("IdMedicalServiceBooking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalResource[] ListMedicalResource {
            get {
                return this.ListMedicalResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMedicalResourceField, value) != true)) {
                    this.ListMedicalResourceField = value;
                    this.RaisePropertyChanged("ListMedicalResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MedicalServiceBookingDateTime {
            get {
                return this.MedicalServiceBookingDateTimeField;
            }
            set {
                if ((this.MedicalServiceBookingDateTimeField.Equals(value) != true)) {
                    this.MedicalServiceBookingDateTimeField = value;
                    this.RaisePropertyChanged("MedicalServiceBookingDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceBookingStatus {
            get {
                return this.MedicalServiceBookingStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceBookingStatusField, value) != true)) {
                    this.MedicalServiceBookingStatusField = value;
                    this.RaisePropertyChanged("MedicalServiceBookingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalServiceBoookingComment {
            get {
                return this.MedicalServiceBoookingCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalServiceBoookingCommentField, value) != true)) {
                    this.MedicalServiceBoookingCommentField = value;
                    this.RaisePropertyChanged("MedicalServiceBoookingComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalResource2", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalResource2 : DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalResource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.Slot[] ListSlotField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.Slot[] ListSlot {
            get {
                return this.ListSlotField;
            }
            set {
                if ((object.ReferenceEquals(this.ListSlotField, value) != true)) {
                    this.ListSlotField = value;
                    this.RaisePropertyChanged("ListSlot");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalResource", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalResource2))]
    public partial class MedicalResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdMedicalResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalEmployee MedicalEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalResourceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalResourceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdMedicalResource {
            get {
                return this.IdMedicalResourceField;
            }
            set {
                if ((this.IdMedicalResourceField.Equals(value) != true)) {
                    this.IdMedicalResourceField = value;
                    this.RaisePropertyChanged("IdMedicalResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalEmployee MedicalEmployee {
            get {
                return this.MedicalEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeeField, value) != true)) {
                    this.MedicalEmployeeField = value;
                    this.RaisePropertyChanged("MedicalEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalResourceComment {
            get {
                return this.MedicalResourceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalResourceCommentField, value) != true)) {
                    this.MedicalResourceCommentField = value;
                    this.RaisePropertyChanged("MedicalResourceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalResourceName {
            get {
                return this.MedicalResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalResourceNameField, value) != true)) {
                    this.MedicalResourceNameField = value;
                    this.RaisePropertyChanged("MedicalResourceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalEmployee", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class MedicalEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalEmployeeCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalEmployeeFedIdSpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalEmployeeIdSpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalEmployeeNameSpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalEmployeePositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalEmployeeSnilsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalEmployeeComment {
            get {
                return this.MedicalEmployeeCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeeCommentField, value) != true)) {
                    this.MedicalEmployeeCommentField = value;
                    this.RaisePropertyChanged("MedicalEmployeeComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalEmployeeFedIdSpeciality {
            get {
                return this.MedicalEmployeeFedIdSpecialityField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeeFedIdSpecialityField, value) != true)) {
                    this.MedicalEmployeeFedIdSpecialityField = value;
                    this.RaisePropertyChanged("MedicalEmployeeFedIdSpeciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalEmployeeIdSpeciality {
            get {
                return this.MedicalEmployeeIdSpecialityField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeeIdSpecialityField, value) != true)) {
                    this.MedicalEmployeeIdSpecialityField = value;
                    this.RaisePropertyChanged("MedicalEmployeeIdSpeciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalEmployeeNameSpeciality {
            get {
                return this.MedicalEmployeeNameSpecialityField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeeNameSpecialityField, value) != true)) {
                    this.MedicalEmployeeNameSpecialityField = value;
                    this.RaisePropertyChanged("MedicalEmployeeNameSpeciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalEmployeePositionCode {
            get {
                return this.MedicalEmployeePositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeePositionCodeField, value) != true)) {
                    this.MedicalEmployeePositionCodeField = value;
                    this.RaisePropertyChanged("MedicalEmployeePositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalEmployeeSnils {
            get {
                return this.MedicalEmployeeSnilsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalEmployeeSnilsField, value) != true)) {
                    this.MedicalEmployeeSnilsField = value;
                    this.RaisePropertyChanged("MedicalEmployeeSnils");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Questionnaire", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class Questionnaire : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DXWebApplication2Responsive.AviceN3ExamServiceReference.QuestionnaireAnswer[] ListQuestionnaireAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionnaireTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.QuestionnaireAnswer[] ListQuestionnaireAnswer {
            get {
                return this.ListQuestionnaireAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.ListQuestionnaireAnswerField, value) != true)) {
                    this.ListQuestionnaireAnswerField = value;
                    this.RaisePropertyChanged("ListQuestionnaireAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionnaireType {
            get {
                return this.QuestionnaireTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionnaireTypeField, value) != true)) {
                    this.QuestionnaireTypeField = value;
                    this.RaisePropertyChanged("QuestionnaireType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionnaireAnswer", Namespace="http://schemas.datacontract.org/2004/07/HubService2.ContractsClasses.Examination")]
    [System.SerializableAttribute()]
    public partial class QuestionnaireAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnswerValue {
            get {
                return this.AnswerValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerValueField, value) != true)) {
                    this.AnswerValueField = value;
                    this.RaisePropertyChanged("AnswerValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionCode {
            get {
                return this.QuestionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionCodeField, value) != true)) {
                    this.QuestionCodeField = value;
                    this.RaisePropertyChanged("QuestionCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AviceN3ExamServiceReference.IExaminationService")]
    public interface IExaminationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/ValidateMedicalExamination", ReplyAction="http://tempuri.org/IExaminationService/ValidateMedicalExaminationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/ValidateMedicalExaminationFaultExceptionFa" +
            "ult", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.ValidateMedicalExaminationResult ValidateMedicalExamination(string idLpu, string comment, string medicalExaminationType, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Patient examinationPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/ValidateMedicalExamination", ReplyAction="http://tempuri.org/IExaminationService/ValidateMedicalExaminationResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.ValidateMedicalExaminationResult> ValidateMedicalExaminationAsync(string idLpu, string comment, string medicalExaminationType, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Patient examinationPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/MedicalExaminationQuestioning", ReplyAction="http://tempuri.org/IExaminationService/MedicalExaminationQuestioningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/MedicalExaminationQuestioningFaultExceptio" +
            "nFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExaminationQuestioningResult MedicalExaminationQuestioning(string idLpu, string idPat, System.Guid idMedicalExamination, string comment, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Questionnaire[] ListQuestionnaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/MedicalExaminationQuestioning", ReplyAction="http://tempuri.org/IExaminationService/MedicalExaminationQuestioningResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExaminationQuestioningResult> MedicalExaminationQuestioningAsync(string idLpu, string idPat, System.Guid idMedicalExamination, string comment, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Questionnaire[] ListQuestionnaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetMedicalServiceAvailableSlots", ReplyAction="http://tempuri.org/IExaminationService/GetMedicalServiceAvailableSlotsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/GetMedicalServiceAvailableSlotsFaultExcept" +
            "ionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalServiceAvailableSlotsResult GetMedicalServiceAvailableSlots(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.DateTime slotSearchStartDate, System.DateTime slotSearchEndDate, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetMedicalServiceAvailableSlots", ReplyAction="http://tempuri.org/IExaminationService/GetMedicalServiceAvailableSlotsResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalServiceAvailableSlotsResult> GetMedicalServiceAvailableSlotsAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.DateTime slotSearchStartDate, System.DateTime slotSearchEndDate, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetMedicalExaminationPlan", ReplyAction="http://tempuri.org/IExaminationService/GetMedicalExaminationPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/GetMedicalExaminationPlanFaultExceptionFau" +
            "lt", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationPlanResult GetMedicalExaminationPlan(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetMedicalExaminationPlan", ReplyAction="http://tempuri.org/IExaminationService/GetMedicalExaminationPlanResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationPlanResult> GetMedicalExaminationPlanAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/BookMedicalService", ReplyAction="http://tempuri.org/IExaminationService/BookMedicalServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/BookMedicalServiceFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.BookMedicalServiceResult BookMedicalService(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.Guid idSlot, System.Nullable<System.DateTime> visitStart, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/BookMedicalService", ReplyAction="http://tempuri.org/IExaminationService/BookMedicalServiceResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.BookMedicalServiceResult> BookMedicalServiceAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.Guid idSlot, System.Nullable<System.DateTime> visitStart, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/CancelMedicalServiceBooking", ReplyAction="http://tempuri.org/IExaminationService/CancelMedicalServiceBookingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/CancelMedicalServiceBookingFaultExceptionF" +
            "ault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.CancelMedicalServiceBookingResult CancelMedicalServiceBooking(string idLpu, System.Guid idMedicalServiceBooking, string idPat, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/CancelMedicalServiceBooking", ReplyAction="http://tempuri.org/IExaminationService/CancelMedicalServiceBookingResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.CancelMedicalServiceBookingResult> CancelMedicalServiceBookingAsync(string idLpu, System.Guid idMedicalServiceBooking, string idPat, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/UpdateMedicalServiceBooking", ReplyAction="http://tempuri.org/IExaminationService/UpdateMedicalServiceBookingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/UpdateMedicalServiceBookingFaultExceptionF" +
            "ault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.UpdateMedicalServiceBookingResult UpdateMedicalServiceBooking(string idLpu, string idPat, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination medicalExamination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/UpdateMedicalServiceBooking", ReplyAction="http://tempuri.org/IExaminationService/UpdateMedicalServiceBookingResponse")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.UpdateMedicalServiceBookingResult> UpdateMedicalServiceBookingAsync(string idLpu, string idPat, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination medicalExamination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetMedicalExaminationQuestionnaires", ReplyAction="http://tempuri.org/IExaminationService/GetMedicalExaminationQuestionnairesRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/GetMedicalExaminationQuestionnairesFaultEx" +
            "ceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationQuestionnairesResult GetMedicalExaminationQuestionnaires(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetMedicalExaminationQuestionnaires", ReplyAction="http://tempuri.org/IExaminationService/GetMedicalExaminationQuestionnairesRespons" +
            "e")]
        System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationQuestionnairesResult> GetMedicalExaminationQuestionnairesAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetVersion", ReplyAction="http://tempuri.org/IExaminationService/GetVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IExaminationService/GetVersionFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExaminationService/GetVersion", ReplyAction="http://tempuri.org/IExaminationService/GetVersionResponse")]
        System.Threading.Tasks.Task<string> GetVersionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExaminationServiceChannel : DXWebApplication2Responsive.AviceN3ExamServiceReference.IExaminationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExaminationServiceClient : System.ServiceModel.ClientBase<DXWebApplication2Responsive.AviceN3ExamServiceReference.IExaminationService>, DXWebApplication2Responsive.AviceN3ExamServiceReference.IExaminationService {
        
        public ExaminationServiceClient() {
        }
        
        public ExaminationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExaminationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExaminationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExaminationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.ValidateMedicalExaminationResult ValidateMedicalExamination(string idLpu, string comment, string medicalExaminationType, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Patient examinationPatient) {
            return base.Channel.ValidateMedicalExamination(idLpu, comment, medicalExaminationType, guid, examinationPatient);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.ValidateMedicalExaminationResult> ValidateMedicalExaminationAsync(string idLpu, string comment, string medicalExaminationType, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Patient examinationPatient) {
            return base.Channel.ValidateMedicalExaminationAsync(idLpu, comment, medicalExaminationType, guid, examinationPatient);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExaminationQuestioningResult MedicalExaminationQuestioning(string idLpu, string idPat, System.Guid idMedicalExamination, string comment, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Questionnaire[] ListQuestionnaire) {
            return base.Channel.MedicalExaminationQuestioning(idLpu, idPat, idMedicalExamination, comment, guid, ListQuestionnaire);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExaminationQuestioningResult> MedicalExaminationQuestioningAsync(string idLpu, string idPat, System.Guid idMedicalExamination, string comment, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.Questionnaire[] ListQuestionnaire) {
            return base.Channel.MedicalExaminationQuestioningAsync(idLpu, idPat, idMedicalExamination, comment, guid, ListQuestionnaire);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalServiceAvailableSlotsResult GetMedicalServiceAvailableSlots(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.DateTime slotSearchStartDate, System.DateTime slotSearchEndDate, System.Guid guid) {
            return base.Channel.GetMedicalServiceAvailableSlots(idLpu, idPat, idMedicalExamination, idMedicalService, idMedicalResource, slotSearchStartDate, slotSearchEndDate, guid);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalServiceAvailableSlotsResult> GetMedicalServiceAvailableSlotsAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.DateTime slotSearchStartDate, System.DateTime slotSearchEndDate, System.Guid guid) {
            return base.Channel.GetMedicalServiceAvailableSlotsAsync(idLpu, idPat, idMedicalExamination, idMedicalService, idMedicalResource, slotSearchStartDate, slotSearchEndDate, guid);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationPlanResult GetMedicalExaminationPlan(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid) {
            return base.Channel.GetMedicalExaminationPlan(idLpu, idPat, idMedicalExamination, guid);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationPlanResult> GetMedicalExaminationPlanAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid) {
            return base.Channel.GetMedicalExaminationPlanAsync(idLpu, idPat, idMedicalExamination, guid);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.BookMedicalServiceResult BookMedicalService(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.Guid idSlot, System.Nullable<System.DateTime> visitStart, System.Guid guid) {
            return base.Channel.BookMedicalService(idLpu, idPat, idMedicalExamination, idMedicalService, idMedicalResource, idSlot, visitStart, guid);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.BookMedicalServiceResult> BookMedicalServiceAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid idMedicalService, System.Guid idMedicalResource, System.Guid idSlot, System.Nullable<System.DateTime> visitStart, System.Guid guid) {
            return base.Channel.BookMedicalServiceAsync(idLpu, idPat, idMedicalExamination, idMedicalService, idMedicalResource, idSlot, visitStart, guid);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.CancelMedicalServiceBookingResult CancelMedicalServiceBooking(string idLpu, System.Guid idMedicalServiceBooking, string idPat, System.Guid guid) {
            return base.Channel.CancelMedicalServiceBooking(idLpu, idMedicalServiceBooking, idPat, guid);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.CancelMedicalServiceBookingResult> CancelMedicalServiceBookingAsync(string idLpu, System.Guid idMedicalServiceBooking, string idPat, System.Guid guid) {
            return base.Channel.CancelMedicalServiceBookingAsync(idLpu, idMedicalServiceBooking, idPat, guid);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.UpdateMedicalServiceBookingResult UpdateMedicalServiceBooking(string idLpu, string idPat, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination medicalExamination) {
            return base.Channel.UpdateMedicalServiceBooking(idLpu, idPat, guid, medicalExamination);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.UpdateMedicalServiceBookingResult> UpdateMedicalServiceBookingAsync(string idLpu, string idPat, System.Guid guid, DXWebApplication2Responsive.AviceN3ExamServiceReference.MedicalExamination medicalExamination) {
            return base.Channel.UpdateMedicalServiceBookingAsync(idLpu, idPat, guid, medicalExamination);
        }
        
        public DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationQuestionnairesResult GetMedicalExaminationQuestionnaires(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid) {
            return base.Channel.GetMedicalExaminationQuestionnaires(idLpu, idPat, idMedicalExamination, guid);
        }
        
        public System.Threading.Tasks.Task<DXWebApplication2Responsive.AviceN3ExamServiceReference.GetMedicalExaminationQuestionnairesResult> GetMedicalExaminationQuestionnairesAsync(string idLpu, string idPat, System.Guid idMedicalExamination, System.Guid guid) {
            return base.Channel.GetMedicalExaminationQuestionnairesAsync(idLpu, idPat, idMedicalExamination, guid);
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
    }
}
