@using DXWebApplication.Models
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvEditing";
            settings.KeyFieldName = "ProductID";
            settings.CallbackRouteValues = new { Controller = "Editing", Action = "EditModesPartial" };
            settings.CustomActionRouteValues = new { Controller = "Editing", Action = "ChangeEditModePartial" };
            settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Editing", Action = "EditModesAddNewPartial" };
            settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Editing", Action = "EditModesUpdatePartial" };
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Editing", Action = "EditModesDeletePartial" };
            settings.SettingsEditing.Mode = GridViewEditingDemosHelper.EditMode;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.SettingsPopup.EditForm.Width = 600;
            settings.Width = Unit.Percentage(100);

            settings.CommandColumn.Visible = true;
            settings.CommandColumn.ShowNewButton = true;
            settings.CommandColumn.ShowDeleteButton = true;
            settings.CommandColumn.ShowEditButton = true;

            settings.Columns.Add("ProductName");
            settings.Columns.Add(column =>
            {
                column.FieldName = "CategoryID";
                column.Caption = "Category";
                column.EditorProperties().ComboBox(p =>
                {
                    p.TextField = "CategoryName";
                    p.ValueField = "CategoryID";
                    p.ValueType = typeof(int);
                    p.DataSource = NorthwindDataProvider.GetCategories();
                });
            });
            settings.Columns.Add("QuantityPerUnit");
            settings.Columns.Add(column =>
            {
                column.FieldName = "UnitPrice";
                column.EditorProperties().SpinEdit(p =>
                {
                    p.DisplayFormatString = "c";
                    p.DisplayFormatInEditMode = true;
                    p.MinValue = 0;
                    p.MaxValue = 1000000;
                    p.SpinButtons.ShowLargeIncrementButtons = true;
                });
            });
            settings.Columns.Add(column =>
            {
                column.FieldName = "UnitsInStock";
                column.EditorProperties().SpinEdit(p =>
                {
                    p.NumberType = SpinEditNumberType.Integer;
                    p.MinValue = 0;
                    p.MaxValue = 10000;
                });
            });
            settings.Columns.Add("Discontinued", MVCxGridViewColumnType.CheckBox);

            settings.PreRender = (sender, e) =>
            {
                ((MVCxGridView)sender).StartEdit(1);
            };
            settings.CellEditorInitialize = (s, e) =>
            {
                ASPxEdit editor = (ASPxEdit)e.Editor;
                editor.ValidationSettings.Display = Display.Dynamic;
            };
        });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()