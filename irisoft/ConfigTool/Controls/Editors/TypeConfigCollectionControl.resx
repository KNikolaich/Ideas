<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAw
        BgAAAk1TRnQBSQFMAgEBAgEAAUABAAFAAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDGQAAXICAAFvAgABbLIABv8BegHqAZgBQAHZAXMBAAFxAQAG/28AAe4B8AHu
        AdsB5AHQAdsB5AHQAdsB5AHQAe4B8AHuFQAD+RX1AQABfwIAAX4BAAF9Ae0BmwFFAd4BeAEAAXUCAAFx
        AgABbHAAAdoB4wHQAUwBgQEOAUwBgQEOAUwBgQEOAdoB4gHPFQABWAGsAeoBSQGzAfMBSwG1AfMBTAG2
        AfMBSgG0AfEBSgGzAfMBRwGvAfMBQwGsAfMBggHyAaEBUQHqAYQBTgHnAYEBSQHiAXwBRQHeAXgBQAHZ
        AXMBAAFvcAAB2gHjAdABTAGBAQ4BTAGBAQ4BTAGBAQ4B2AHhAc0VAAFfAa4B5QFWAbwB/wFYAb4B/wFZ
        Ab8B/wFSAb0B+QFWAbwB/wFTAbkB/wFPAbUB/wGGAfcBpQGGAfYBpAGDAfQBogFOAecBgQF9Ae0BmwF6
        AeoBmAEAAXJwAAHaAeMB0AFMAYEBDgFMAYEBDgFMAYEBDgHXAeABzBUAAWIBsAHkAVkBvwH/AV0BwwH/
        AV8BxQH/AVQBvwH5AVoBwAH/AVYBvAH/AVEBtwH/AU0BswH/AT4BqQH6AYYB9gGkAVEB6gGEAQABfgEA
        AUQBkgHgA/ZjAAHuAfAB7gHbAeQB0AHYAeEBzQHXAeABzAHBAdABrQFMAYEBDgFPAYcBDwFMAYEBDgHA
        AdEBrgHXAeABzAHXAeABzAHXAeABzAHwAfEB7gkAAWMBsQHlAVsBwQH/AWABxgH/AWUBywH/AVUBwAH5
        AVwBwgH/AVcBvQH/AVIBuAH/AU0BswH/AT8BqQH6AYYB9wGlAYIB8gGhAQABfwEAAUUBkwHgA/ZjAAHb
        AeQB0QFMAYEBDgFMAYEBDgFMAYEBDgFMAYEBDgFMAYEBDgFSAYsBDwFMAYEBDgFMAYEBDgFMAYEBDgFM
        AYEBDgFMAYEBDgHXAeABzAkAAV8BswHsAVUBxAH/AVkByAH/AVwBygH/AVEBvwH8AVYBxQH/AVABvwH/
        AUwBuwH/AUcBtgH/ATsBqQH+AT0BrAH/ATcBpgH/ATIBoQH/AT8BkwHmA/VjAAHbAeQB0QFMAYEBDgFS
        AYwBDwFSAYwBDwFSAYsBDwFSAYsBDwFUAY4BDwFPAYcBDwFPAYcBDwFPAYcBDwFPAYYBDwFMAYEBDgHX
        AeABzAkAA+YJ/wP3Cv8C/gHyAu8B/wLzAf8C7gH/AugB4ALLA/ZjAAHbAeQB0QFMAYEBDgFMAYEBDgFM
        AYEBDgFMAYEBDgFMAYEBDgFSAYsBDwFMAYEBDgFMAYEBDgFMAYEBDgFMAYEBDgFMAYEBDgHXAeABzAkA
        A+YJ/wP3DP8B8gLvAf8C8wH/Au4B/wLoAeACygP2YwAC8AHuAdsB5AHRAdsB4wHQAdsB4wHQAcQB1AGx
        AUwBgQEOAVIBjAEPAUwBgQEOAb4BzwGsAdoB4wHQAdoB4wHQAdoB4wHQAfAB8gHvCQAD5wn/A/cK/wL8
        AfIC7gH/AvIB/wLtAf8C5wHhAsoD9m8AAdkB4QHOAUwBgQEOAVMBjgEPAUwBgQEOAdMB3AHJFQAD5gn/
        A/cH/wL+Af8C+gHyAu0B/wLwAf8C6wH/AuYB4QLLA/ZvAAHZAeEBzgFMAYEBDgFTAY0BDwFMAYEBDgHU
        Ad0ByhUAA6cGnwOeA50GmQGXApgBlAKVBpMBkQKSAY8CkgGPApID/m8AAdkB4QHOAUwBgQEOAUwBgQEO
        AUwBgQEOAdcB4AHMsQAB7gHwAe4B2gHjAdAB2gHjAdAB2gHjAdAB8QHzAe//AGMAAUIBTQE+BwABPgMA
        ASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAP/AeMEAAP/AYAEAAH4AT8BgAUAAfgBPwGABQAB+AE/
        AYAFAAH4AT8BgAUAAYABAwGABQABgAEDAYAFAAGAAQMBgAUAAYABAwGABQABgAEDAYAFAAH4AT8BgAUA
        AfgBPwGABQAB+AE/Av8EAAH4AT8C/wQABP8EAAs=
</value>
  </data>
</root>